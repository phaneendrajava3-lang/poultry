<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8"/>
  <title>Manage Customers</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"/>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet"/>
  <script>var contextPath = '${pageContext.request.contextPath}';</script>
</head>
<body class="bg-light">
<%@ include file="nav.jsp" %>
<div class="container mt-4">
<!--  <div class="d-flex justify-content-start mb-3">
    <a href="${pageContext.request.contextPath}/dashboard" class="btn btn-outline-secondary">
      <i class="bi bi-arrow-left"></i> Back
    </a>
  </div>-->

  <h2 class="mb-3">Manage Customers</h2>

  <!-- Add -->
  <form action="${pageContext.request.contextPath}/customers/save" method="post" class="card p-4 mb-4 shadow-sm bg-white">
    <div class="row g-3">
      <div class="col-md-3">
        <label class="form-label">Customer Name</label>
        <input type="text" name="name" class="form-control" required/>
      </div>
      <div class="col-md-3">
        <label class="form-label">Mobile</label>
        <input type="text" name="mobile" class="form-control"/>
      </div>
      <div class="col-md-6">
        <label class="form-label">Address</label>
        <input type="text" name="address" class="form-control"/>
      </div>
      <div class="col-md-12 text-end">
        <button type="submit" class="btn btn-primary">Save</button>
        <button type="reset" class="btn btn-secondary ms-2">Clear</button>
      </div>
    </div>
  </form>

  <!-- Filters -->
  <div class="row mb-3">
    <div class="col-md-4 d-flex">
      <input id="filter-name" class="form-control" placeholder="Filter by name" />
      <button id="filter-btn" class="btn btn-primary ms-2" type="button">Search</button>
    </div>
  </div>

  <!-- Table -->
  <div class="custom-table-box">
    <table class="table table-bordered table-hover bg-white shadow-sm" id="custTable">
      <thead class="table-dark">
        <tr>
          <th>Name</th><th>Mobile</th><th>Address</th><th>Outstanding</th><th>Action</th>
        </tr>
      </thead>
      <tbody>
        <c:forEach var="cust" items="${customers}">
          <tr>
            <td>${cust.name}</td>
            <td>${cust.mobile}</td>
            <td>${cust.address}</td>
            <td>${cust.outstandingAmount != null ? cust.outstandingAmount : 0}</td>
            <td class="d-flex gap-1">
              <button class="btn btn-sm btn-outline-primary p-1" data-bs-toggle="modal" data-bs-target="#editModal"
                      onclick="fillEdit('${cust.id}','${cust.name}','${cust.mobile}','${cust.address}')" title="Edit">
                <i class="bi bi-pencil"></i>
              </button>
              <c:choose>
                <c:when test="${cust.outstandingAmount gt 0}">
                  <a class="btn btn-sm btn-outline-danger p-1 disabled" href="#" onclick="return false;" title="Delete">
                    <i class="bi bi-trash"></i>
                  </a>
                </c:when>
                <c:otherwise>
                  <a class="btn btn-sm btn-outline-danger p-1" href="#" onclick="return canDelete(${cust.outstandingAmount});" title="Delete">
                    <i class="bi bi-trash"></i>
                </c:otherwise>
              </c:choose>
            </td>
          </tr>
        </c:forEach>
      </tbody>
    </table>
  </div>
  <!-- Filtered Table (hidden by default) -->
  <div class="custom-table-box">
   <!-- <table class="table table-bordered table-hover bg-white shadow-sm" id="filteredTable" style="display:none;">
      <thead class="table-dark">
        <tr>
          <th>Name</th><th>Mobile</th><th>Address</th><th>Outstanding</th><th>Action</th>
        </tr>
      </thead>
      <tbody></tbody>
    </table>-->
  </div>
</div>

<!-- Edit Modal -->
<div class="modal fade" id="editModal" tabindex="-1"><div class="modal-dialog">
  <form class="modal-content" action="${pageContext.request.contextPath}/customers/save" method="post">
    <div class="modal-header"><h5 class="modal-title">Edit Customer</h5>
      <button type="button" class="btn-close" data-bs-dismiss="modal"></button></div>
    <div class="modal-body row g-3 px-3">
      <input type="hidden" name="id" id="edit-id"/>
      <div class="col-12">
        <label>Name</label>
        <input class="form-control" name="name" id="edit-name" required/>
      </div>
      <div class="col-12">
        <label>Mobile</label>
        <input class="form-control" name="mobile" id="edit-mobile"/>
      </div>
      <div class="col-12">
        <label>Address</label>
        <input class="form-control" name="address" id="edit-address"/>
      </div>
    </div>
    <div class="modal-footer">
      <button class="btn btn-success" type="submit">Update</button>
      <button class="btn btn-secondary" type="button" data-bs-dismiss="modal">Close</button>
    </div>
  </form>
</div></div>

<!-- View Modal -->
<div class="modal fade" id="viewModal" tabindex="-1"><div class="modal-dialog">
  <div class="modal-content p-3">
    <div class="modal-header"><h5 class="modal-title">Customer Details</h5>
      <button type="button" class="btn-close" data-bs-dismiss="modal"></button></div>
    <div class="modal-body">
      <p><strong>ID:</strong> <span id="v-id"></span></p>
      <p><strong>Name:</strong> <span id="v-name"></span></p>
      <p><strong>Mobile:</strong> <span id="v-mobile"></span></p>
      <p><strong>Address:</strong> <span id="v-address"></span></p>
    </div>
  </div>
</div></div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
  function fillEdit(id,n,m,a){
    document.getElementById('edit-id').value=id;
    document.getElementById('edit-name').value=n;
    document.getElementById('edit-mobile').value=m;
    document.getElementById('edit-address').value=a;
  }
  function fillView(id,n,m,a){
    document.getElementById('v-id').innerText=id;
    document.getElementById('v-name').innerText=n;
    document.getElementById('v-mobile').innerText=m;
    document.getElementById('v-address').innerText=a;
  }
  function canDelete(outstanding) {
    if (outstanding > 0) return false;
    return confirm('Delete this customer?');
  }

  document.addEventListener('DOMContentLoaded', function() {
    const filterInput = document.getElementById('filter-name');
    const filterBtn = document.getElementById('filter-btn');
    const tbody = document.querySelector('#custTable tbody');
    const custTable = document.getElementById('custTable');
    const filteredTable = document.getElementById('filteredTable');
    const filteredTbody = filteredTable.querySelector('tbody');

    // Ensure tbody exists before proceeding
    if (!tbody) {
      console.error('Table body not found!');
      return;
    }

    const originalRows = Array.from(tbody.children); // Keep the original rows

    function filterCustomers() {
      let filterValue = filterInput.value.trim().toLowerCase();
      // If filter is empty, show original table and hide filtered table
	  console.log('Filter Value:', filterValue);
      if (filterValue === '') {
        custTable.style.display = '';
        filteredTable.style.display = 'none';
        return;
      }
      const url = `${contextPath}/customers/filter?name=` + encodeURIComponent(filterValue);
      fetch(url)
        .then(response => response.json())
        .then(data => {
          if (!Array.isArray(data) || data.length === 0) {
            filteredTbody.innerHTML = '<tr><td colspan="5" class="text-center">No data found</td></tr>';
            custTable.style.display = 'none';
            filteredTable.style.display = '';
            return;
          }
          filteredTbody.innerHTML = '';
          data.forEach(cust => {
            const custId = (cust.id !== undefined && cust.id !== null) ? String(cust.id) : '';
            const custName = (cust.name !== undefined && cust.name !== null) ? String(cust.name) : '';
			console.log('Customer Name:', custName);
            const custMobile = (cust.mobile !== undefined && cust.mobile !== null) ? String(cust.mobile) : '';
            const custAddress = (cust.address !== undefined && cust.address !== null) ? String(cust.address) : '';
            const custOutstanding = typeof cust.outstandingAmount === 'number' ? cust.outstandingAmount : 0;
            let deleteBtn = '';
            if (custOutstanding > 0) {
              deleteBtn = `<a class="btn btn-sm btn-outline-danger p-1 disabled" href="#" onclick="return false;" title="Delete">
                <i class="bi bi-trash"></i>
              </a>`;
            } else {
              deleteBtn = `<a class="btn btn-sm btn-outline-danger p-1" href="#" onclick="return canDelete(${custOutstanding});" title="Delete">
                <i class="bi bi-trash"></i>
              </a>`;
            }
            // Use DOM methods to set values safely and avoid issues with undefined/null or XSS
            const tr = document.createElement('tr');

            // Name
            const tdName = document.createElement('td');
            tdName.textContent = custName || '';
            tr.appendChild(tdName);

            // Mobile
            const tdMobile = document.createElement('td');
            tdMobile.textContent = custMobile || '';
            tr.appendChild(tdMobile);

            // Address
            const tdAddress = document.createElement('td');
            tdAddress.textContent = custAddress || '';
            tr.appendChild(tdAddress);

            // Outstanding
            const tdOutstanding = document.createElement('td');
            tdOutstanding.textContent = custOutstanding;
            tr.appendChild(tdOutstanding);

            // Action
            const tdAction = document.createElement('td');
            tdAction.className = 'd-flex gap-1';

            // Edit button
            const editBtn = document.createElement('button');
            editBtn.className = 'btn btn-sm btn-outline-primary p-1 edit-btn';
            editBtn.setAttribute('data-id', custId);
            editBtn.setAttribute('data-name', custName);
            editBtn.setAttribute('data-mobile', custMobile);
            editBtn.setAttribute('data-address', custAddress);
            editBtn.setAttribute('data-bs-toggle', 'modal');
            editBtn.setAttribute('data-bs-target', '#editModal');
            editBtn.setAttribute('title', 'Edit');
            editBtn.innerHTML = '<i class="bi bi-pencil"></i>';
            tdAction.appendChild(editBtn);

            // Delete button
            const deleteBtnWrapper = document.createElement('span');
            deleteBtnWrapper.innerHTML = deleteBtn;
            tdAction.appendChild(deleteBtnWrapper);

            tr.appendChild(tdAction);
            filteredTbody.appendChild(tr);
          });
          filteredTbody.querySelectorAll('.edit-btn').forEach(btn => {
            btn.addEventListener('click', function() {
              fillEdit(
                btn.getAttribute('data-id'),
                btn.getAttribute('data-name'),
                btn.getAttribute('data-mobile'),
                btn.getAttribute('data-address')
              );
            });
          });
          custTable.style.display = 'none';
          filteredTable.style.display = '';
        })
        .catch(error => {
          filteredTbody.innerHTML = '<tr><td colspan="5" class="text-center text-danger">Error fetching data</td></tr>';
          custTable.style.display = 'none';
          filteredTable.style.display = '';
        });
    }
    // Attach event listeners
    filterBtn.addEventListener('click', filterCustomers);
    filterInput.addEventListener('input', filterCustomers);
  });


</script>
<style>
.custom-table-box {
  max-width: 100%;
  width: 100%;
  max-height: 400px;
  min-height: 200px;
  overflow: auto;
  border: 1px solid #dee2e6;
  border-radius: 0.5rem;
  background: #fff;
  margin-bottom: 1rem;
  padding: 0.5rem;
}
</style>
</body>
</html>