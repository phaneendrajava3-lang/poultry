<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8"/>
  <title>Trip Entries</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"/>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet"/>
  <style>
.custom-table-box {
  max-width: 100%;
  width: 100%;
  max-height: 400px;
  min-height: 200px;
  overflow: auto;
  border: 1px solid #dee2e6;
  border-radius: 0.5rem;
  background: #fff;
  margin-bottom: 1rem;
  padding: 0.5rem;
}
</style>
</head>
<body class="bg-light">
<%@ include file="nav.jsp" %>
<div class="container mt-4">

  <!-- Add Entry Form -->
  <form action="${pageContext.request.contextPath}/entries/save" method="post" class="card p-4 mb-4 shadow-sm bg-white" id="entryForm">
    <div class="row g-3">
      <div class="col-md-3">
        <label class="form-label">Date</label>
        <input type="date" name="date" class="form-control" required/>
      </div>
      <div class="col-md-3">
        <label class="form-label">Trip Number</label>
        <select name="tripNumber" class="form-select" required>
          <option value="">-- Select Trip Number --</option>
          <c:forEach var="t" items="${tripDetailsList}">
            <option value="${t.tripNumber}">${t.tripNumber}</option>
          </c:forEach>
        </select>
      </div>
      <div class="col-md-3">
        <label class="form-label">Customer</label>
        <input type="text" id="customerNameInput" class="form-control" placeholder="Type customer name..." autocomplete="off" required />
        <input type="hidden" name="customer.id" id="customerIdInput" />
        <div id="customerSuggestions" class="list-group position-absolute w-100" style="z-index: 1000;"></div>
      </div>
      <div class="col-md-3">
        <label class="form-label">Mode of Payment</label>
        <input type="text" name="modeOfPayment" class="form-control"/>
      </div>

      <div class="col-md-3">
        <label class="form-label">Bird Count</label>
        <input type="number" name="birdCount" id="birdCount" class="form-control" min="0" step="1"/>
      </div>
      <div class="col-md-3">
        <label class="form-label">Weight (kg)</label>
        <input type="number" name="weight" class="form-control" min="0" step="0.01" required/>
      </div>
      <div class="col-md-3">
        <label class="form-label">Unit Price (₹)</label>
        <input type="number" name="unitPrice" id="unitPrice" class="form-control" min="0" step="0.01" required/>
      </div>
      <div class="col-md-3">
        <label class="form-label">Extra Charges (₹)</label>
        <input type="number" name="extraCharges" id="extraCharges" class="form-control" min="0" step="0.01"/>
      </div>

      <div class="col-md-3">
        <label class="form-label">Final Price (₹)</label>
        <input type="number" name="finalPrice" id="finalPrice" class="form-control" min="0" step="0.01" readonly/>
      </div>
      <div class="col-md-3">
        <label class="form-label">Received Amount (₹)</label>
        <input type="number" name="receivedAmount" id="receivedAmount" class="form-control" min="0" step="0.01"/>
      </div>
      <div class="col-md-3">
        <label class="form-label">Balance Amount (₹)</label>
        <input type="number" name="balanceAmount" id="balanceAmount" class="form-control" min="0" step="0.01" readonly/>
      </div>
      <div class="col-md-3">
        <label class="form-label">Book No/Bill No.</label>
        <input type="text" name="bookOrBillNo" id="bookOrBillNo" class="form-control" required pattern=".*\/.*" title="Must contain '/' symbol"/>
      </div>
    </div>
    <div class="row mt-3">
      <div class="col-12 text-end">
        <button class="btn btn-success" type="submit">Save</button>
        <button class="btn btn-secondary ms-2" type="reset">Clear</button>
      </div>
    </div>
  </form>

  <!-- Filters -->
  <div class="row mb-3">
    <div class="col-md-3">
      <input id="filter-customer" class="form-control" placeholder="Filter by customer name" />
    </div>
    <div class="col-md-3">
      <input id="filter-start" type="date" class="form-control" placeholder="Start date" />
    </div>
    <div class="col-md-3">
      <input id="filter-end" type="date" class="form-control" placeholder="End date" />
    </div>
  </div>

  <!-- Entries Table -->
  <div class="custom-table-box">
    <table class="table table-bordered table-hover bg-white shadow-sm" id="entriesTable">
      <thead class="table-dark">
        <tr>
          <th style="min-width: 130px;">Date</th><th>Trip Number</th><th>Customer</th>
          <th>Book No/Bill No.</th>
          <th>Birds</th><th>Weight</th><th>Unit Price</th><th>Extra Charges</th>
          <th>Final Price</th><th>Received</th><th>Balance</th><th>Mode of Payment</th>
          <th>Action</th>
        </tr>
      </thead>
      <tbody>
        <!-- Table body will be populated by JavaScript only -->
      </tbody>
    </table>
  </div>

  <!-- Pagination Controls (moved below both tables) -->
  <!-- Pagination removed -->
</div>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
  var contextPath = '${pageContext.request.contextPath}';
function calculateAmounts() {
  const birdCount = parseFloat(document.getElementById('birdCount').value) || 0;
  const unitPrice = parseFloat(document.getElementById('unitPrice').value) || 0;
  const extraCharges = parseFloat(document.getElementById('extraCharges').value) || 0;
  const receivedAmount = parseFloat(document.getElementById('receivedAmount').value) || 0;
  const finalPrice = (birdCount * unitPrice) + extraCharges;
  document.getElementById('finalPrice').value = finalPrice.toFixed(2);
  const balanceAmount = finalPrice - receivedAmount;
  document.getElementById('balanceAmount').value = balanceAmount.toFixed(2);
}

document.getElementById('birdCount').addEventListener('input', calculateAmounts);
document.getElementById('unitPrice').addEventListener('input', calculateAmounts);
document.getElementById('extraCharges').addEventListener('input', calculateAmounts);
document.getElementById('receivedAmount').addEventListener('input', calculateAmounts);

document.addEventListener('DOMContentLoaded', function() {
  const filterCustomer = document.getElementById('filter-customer');
  const filterStart = document.getElementById('filter-start');
  const filterEnd = document.getElementById('filter-end');
  const entriesTable = document.getElementById('entriesTable');

  function updateTable(data) {
    const tbody = entriesTable.querySelector('tbody');
    tbody.innerHTML = '';
    if (!Array.isArray(data) || data.length === 0) {
      tbody.innerHTML = '<tr><td colspan="13" class="text-center">No data found</td></tr>';
      return;
    }
    data.forEach(e => {
      const tr = document.createElement('tr');
      const td = v => { const td = document.createElement('td'); td.textContent = v ?? ''; return td; };
      tr.appendChild(td(e.date));
      tr.appendChild(td(e.tripNumber));
      tr.appendChild(td(e.customer && e.customer.name));
      tr.appendChild(td(e.bookOrBillNo));
      tr.appendChild(td(e.birdCount));
      tr.appendChild(td(e.weight));
      tr.appendChild(td(e.unitPrice));
      tr.appendChild(td(e.extraCharges));
      tr.appendChild(td(e.finalPrice));
      tr.appendChild(td(e.receivedAmount));
      tr.appendChild(td(e.balanceAmount));
      tr.appendChild(td(e.modeOfPayment));
      // Action
      const tdAction = document.createElement('td');
      tdAction.className = 'd-flex gap-1';
      const print = document.createElement('a');
      print.className = 'btn btn-sm btn-outline-primary p-1';
      print.href = contextPath + '/entries/print/' + e.id;
      print.target = '_blank';
      print.title = 'Print';
      print.innerHTML = '<i class="bi bi-printer"></i>';
      tdAction.appendChild(print);
      const edit = document.createElement('a');
      edit.className = 'btn btn-sm btn-outline-warning p-1';
      edit.href = contextPath + '/entries/edit/' + e.id;
      edit.title = 'Edit';
      edit.innerHTML = '<i class="bi bi-pencil-square"></i>';
      tdAction.appendChild(edit);
      const del = document.createElement('a');
      del.className = 'btn btn-sm btn-outline-danger p-1';
      del.href = contextPath + '/entries/delete/' + e.id;
      del.title = 'Delete';
      del.onclick = function() { return confirm('Are you sure you want to delete the entry?'); };
      del.innerHTML = '<i class="bi bi-trash"></i>';
      tdAction.appendChild(del);
      tr.appendChild(tdAction);
      tbody.appendChild(tr);
    });
  }

  function loadEntries() {
    fetch(`${contextPath}/entries/filter`)
      .then(r => r.json())
      .then(updateTable);
  }

  function filterEntries() {
    // read values
    const start = filterStart.value || "";
    const end   = filterEnd.value || "";

    // If it's a SELECT that holds IDs but you want the name, use .selectedOptions[0].text
    // const customer = filterCustomer.selectedOptions?.[0]?.text?.trim() || "";
    // If it's a text input and you want the raw value, use this instead:
    const customer = (filterCustomer.value || "").trim();

    // build params robustly
    const params = new URLSearchParams();
    if (customer) params.set("customerName", customer);
    if (start)    params.set("startDate", start);
    if (end)      params.set("endDate", end);

    const qs = params.toString(); // e.g. "customerName=ACME&startDate=2025-08-26"
    const base = `${(typeof contextPath === "string" ? contextPath : "")}/entries/filter`;
    const url = qs ? `${base}?${qs}` : base;

    console.log("Filtering with customer:", customer);
    console.log("Filtering with start date:", start);
    console.log("Filtering with end date:", end);
    console.log("QueryString:", qs);
    console.log("Fetching URL:", url);

    fetch(url)
      .then(r => r.json())
      .then(updateTable)
      .catch(err => console.error("Filter fetch failed:", err));
  }

  // listeners
  filterCustomer.addEventListener('input',  filterEntries);
  filterStart.addEventListener('change',    filterEntries);
  filterEnd.addEventListener('change',      filterEntries);

  // Initial load
  loadEntries();

</script>
</body>
</html>