<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8"/>
  <title>Poultry Dashboard</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"/>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    // Define contextPath for use in JS
    var contextPath = '${pageContext.request.contextPath}';
  </script>
</head>
<body style="background:#f6f8fa; margin:0; padding:0;">
<%@ include file="nav.jsp" %>
<div class="main-content">
<div class="container py-4">

<!--  <h2 class="mb-3">Poultry Transport Dashboard</h2>

  <div class="d-flex gap-2 mb-4">
    <a class="btn btn-success" href="${pageContext.request.contextPath}/entries">Trip Entries</a>
    <a class="btn btn-primary" href="${pageContext.request.contextPath}/trip-details">
      <i class="bi bi-pencil-square"></i> Update Trip Details
    </a>
  </div>-->

  <form id="dashboardFilterForm" class="row g-2 align-items-end mb-3" method="get" action="${pageContext.request.contextPath}/dashboard">

    <!-- Month Selection -->
    <div class="col-auto">
      <label for="filterMonth" class="form-label mb-0">Month</label>
      <select id="filterMonth" name="month" class="form-select" onchange="document.getElementById('dashboardFilterForm').submit();">
        <c:forEach var="i" begin="1" end="12">
          <option value="${i}" <c:if test="${i == selectedMonth}">selected</c:if>>
            <c:choose>
              <c:when test="${i == 1}">Jan</c:when>
              <c:when test="${i == 2}">Feb</c:when>
              <c:when test="${i == 3}">Mar</c:when>
              <c:when test="${i == 4}">Apr</c:when>
              <c:when test="${i == 5}">May</c:when>
              <c:when test="${i == 6}">Jun</c:when>
              <c:when test="${i == 7}">Jul</c:when>
              <c:when test="${i == 8}">Aug</c:when>
              <c:when test="${i == 9}">Sep</c:when>
              <c:when test="${i == 10}">Oct</c:when>
              <c:when test="${i == 11}">Nov</c:when>
              <c:otherwise>Dec</c:otherwise>
            </c:choose>
          </option>
        </c:forEach>
      </select>
    </div>

    <!-- Year Selection -->
    <div class="col-auto">
      <label for="filterYear" class="form-label mb-0">Year</label>
      <select id="filterYear" name="year" class="form-select" onchange="document.getElementById('dashboardFilterForm').submit();">
        <c:forEach var="y" begin="2020" end="${currentYear}">
          <option value="${y}" <c:if test="${y == selectedYear}">selected</c:if>>${y}</option>
        </c:forEach>
      </select>
    </div>

    <!-- Generate Report Button on the Right -->
    <div class="col-auto ms-auto">
      <a class="btn btn-lg fw-bold shadow"
         href="${pageContext.request.contextPath}/report"
         style="background: linear-gradient(90deg, #28a745 0%, #218838 100%);
                color: #fff; border: none;
                box-shadow: 0 2px 8px rgba(40,167,69,0.18);">
        ðŸ“Š Generate Report
      </a>
    </div>

  </form>


  <div class="row g-3 mb-4">
    <div class="col-md-2"><div class="card shadow-sm p-3"><div class="text-muted">Total Customers</div><div class="fs-4">${totalCustomers}</div></div></div>
    <div class="col-md-2"><div class="card shadow-sm p-3"><div class="text-muted">Total Drivers</div><div class="fs-4">${totalDrivers}</div></div></div>
    <div class="col-md-2"><div class="card shadow-sm p-3"><div class="text-muted">Vans in Service</div><div class="fs-4">${totalVans}</div></div></div>
    <div class="col-md-2"><div class="card shadow-sm p-3"><div class="text-muted">Trips This Month</div><div class="fs-4">${tripsThisMonth}</div></div></div>
    <div class="col-md-2"><div class="card shadow-sm p-3"><div class="text-muted">Entries This Month</div><div class="fs-4">${entriesThisMonth}</div></div></div>
    <div class="col-md-2"><div class="card shadow-sm p-3"><div class="text-muted">Amount Spent (Final Price)</div><div class="fs-4">â‚¹ ${entriesAmount}</div></div></div>
    <div class="col-md-2"><div class="card shadow-sm p-3"><div class="text-muted">Amount Received</div><div class="fs-4">â‚¹ ${amountReceived}</div></div></div>
    <div class="col-md-2"><div class="card shadow-sm p-3"><div class="text-muted">Fuel Expenses</div><div class="fs-4">â‚¹ ${fuelCost}</div></div></div>
    <div class="col-md-2"><div class="card shadow-sm p-3"><div class="text-muted">Dead Chicks</div><div class="fs-4">${deadChicks}</div></div></div>
  </div>

  <div class="row g-3">
    <div class="col-md-6">
      <div class="card p-3 shadow-sm">
        <h6>Monthly Financial Overview</h6>
        <canvas id="financeChart"></canvas>
      </div>
    </div>
    <div class="col-md-6">
      <div class="card p-3 shadow-sm">
        <h6>Monthly Trends (Yearly Line Chart)</h6>
        <canvas id="monthlyTrendsChart"></canvas>
      </div>
    </div>
    <div class="col-md-6">
      <div class="card p-3 shadow-sm">
        <h6>Income vs Expenses (Small)</h6>
        <canvas id="smallFinanceChart" style="max-width: 350px; max-height: 220px;"></canvas>
      </div>
    </div>
    <div class="col-md-6">
      <div class="card p-3 shadow-sm">
        <h6>Dead Chicks & Birds Count</h6>
        <canvas id="deadTripsChart" style="max-width: 350px; max-height: 220px;"></canvas>
      </div>
    </div>
  </div>

  <div class="row g-3 mt-4">
    <div class="col-md-12">
      <div class="card p-3 shadow-sm">
        <h6>Recent Trip Details</h6>
        <div class="table-responsive">
          <table class="table table-bordered table-hover">
            <thead class="table-light">
              <tr>
                <th>Trip Number</th>
                <th>Driver</th>
                <th>Co-Driver</th>
                <th>Van</th>
                <th>Start Date</th>
                <th>End Date</th>
                <th>Loading Point</th>
                <th>Fuel Cost</th>
                <th>Dead Chicks</th>
                <th>Expenses</th>
              </tr>
            </thead>
            <tbody>
              <c:forEach var="t" items="${recentTrips}">
                <tr>
                  <td>${t.tripNumber}</td>
                  <td><c:out value="${t.driver != null ? t.driver.name : ''}"/></td>
                  <td><c:out value="${t.codriver != null ? t.codriver.name : ''}"/></td>
                  <td><c:out value="${t.van != null ? t.van.vehicleNumber : ''}"/></td>
                  <td>${t.startDate}</td>
                  <td>${t.endDate}</td>
                  <td>${t.loadingPoint}</td>
                  <td>${t.fuelCost}</td>
                  <td>${t.deadChicks}</td>
                  <td>${t.expenses}</td>
                </tr>
              </c:forEach>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
</div>

<script>
	
	document.addEventListener("DOMContentLoaded", function() {
	    const months = document.querySelectorAll("#filterMonth option");
	    months.forEach(opt => console.log("Month option:", opt.value, opt.text));

	    const years = document.querySelectorAll("#filterYear option");
	    years.forEach(opt => console.log("Year option:", opt.value));
	  });
	  
  // Helper to update chart data
  function updateCharts(entriesAmount, amountReceived, fuelCost, deadChicks, birdsCount) {
    // Destroy existing charts if they exist
    if (window.financeChartInstance) window.financeChartInstance.destroy();
    if (window.smallFinanceChartInstance) window.smallFinanceChartInstance.destroy();
    if (window.deadTripsChartInstance) window.deadTripsChartInstance.destroy();

    // Finance Bar Chart
    window.financeChartInstance = new Chart(document.getElementById('financeChart'), {
      type: 'bar',
      data: {
        labels: ['Amount Spent', 'Amount Received', 'Balance Amount'],
        datasets: [{
          label: 'This Month',
          data: [${entriesAmount}, ${amountReceived}, ${balanceAmount}],
          backgroundColor: ['#0d6efd','#198754','#dc3545']
        }]
      },
      options: {
        responsive: true,
        plugins: { legend: { display: false } },
        scales: { y: { beginAtZero: true } }
      }
    });

    // Small Pie Chart
    window.smallFinanceChartInstance = new Chart(document.getElementById('smallFinanceChart'), {
      type: 'pie',
      data: {
        labels: ['Amount Spent', 'Amount Received', 'Fuel Expenses'],
        datasets: [{
          data: [entriesAmount, amountReceived, fuelCost],
          backgroundColor: ['#dc3545', '#198754', '#0d6efd']
        }]
      },
      options: {
        responsive: true,
        plugins: { legend: { display: true } },
        cutout: '60%'
      }
    });

    // Dead Chicks & Birds Count Bar Chart
    window.deadTripsChartInstance = new Chart(document.getElementById('deadTripsChart'), {
      type: 'bar',
      data: {
        labels: ['Dead Chicks', 'Birds Count'],
        datasets: [{
          label: 'Count',
          data: [deadChicks, birdsCount],
          backgroundColor: ['#dc3545', '#0d6efd']
        }]
      },
      options: {
        responsive: true,
        plugins: { legend: { display: false } },
        scales: { y: { beginAtZero: true } }
      }
    });
  }

  // Initial chart render with server values
  updateCharts(
    ${entriesAmount},
    ${amountReceived},
    ${balanceAmount},
    ${deadChicks},
    ${birdsCount}
  );

  // Fetch actual monthly trends data from backend if available
  const monthlyLabels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
  const monthlyTrendsSpent = [
    <c:forEach var="m" begin="0" end="11">${monthlyTrendsSpent[m] != null ? monthlyTrendsSpent[m] : 0}<c:if test="${m != 11}">,</c:if></c:forEach>
  ];
  const monthlyTrendsReceived = [
    <c:forEach var="m" begin="0" end="11">${monthlyTrendsReceived[m] != null ? monthlyTrendsReceived[m] : 0}<c:if test="${m != 11}">,</c:if></c:forEach>
  ];
  const monthlyTrendsBalance = [
    <c:forEach var="m" begin="0" end="11">${monthlyTrendsBalance[m] != null ? monthlyTrendsBalance[m] : 0}<c:if test="${m != 11}">,</c:if></c:forEach>
  ];

  new Chart(document.getElementById('monthlyTrendsChart'), {
    type: 'bar',
    data: {
      labels: monthlyLabels,
      datasets: [
        {
          label: 'Amount Spent',
          data: monthlyTrendsSpent,
          backgroundColor: '#0d6efd'
        },
        {
          label: 'Amount Received',
          data: monthlyTrendsReceived,
          backgroundColor: '#198754'
        },
        {
          label: 'Balance Amount',
          data: monthlyTrendsBalance,
          backgroundColor: '#dc3545'
        }
      ]
    },
    options: {
      responsive: true,
      plugins: { legend: { display: true } },
      scales: {
        x: { stacked: false },
        y: { beginAtZero: true, stacked: false }
      }
    }
  });

  document.getElementById('dashboardFilterForm').addEventListener('submit', function(e) {
    e.preventDefault();
    const month = document.getElementById('filterMonth').value;
    const year = document.getElementById('filterYear').value;
    // Fetch new data via AJAX and update charts without reloading
    fetch('${contextPath}/dashboard?month=${month}&year=${year}&ajax=1')
      .then(res => res.json())
      .then(data => {
        // Update number boards
        document.querySelector('.fs-4:nth-child(1)').textContent = data.totalCustomers;
        document.querySelector('.fs-4:nth-child(2)').textContent = data.totalDrivers;
        document.querySelector('.fs-4:nth-child(3)').textContent = data.totalVans;
        document.querySelector('.fs-4:nth-child(4)').textContent = data.tripsThisMonth;
        document.querySelector('.fs-4:nth-child(5)').textContent = data.entriesThisMonth;
        document.querySelector('.fs-4:nth-child(6)').textContent = 'â‚¹ ' + data.entriesAmount;
        document.querySelector('.fs-4:nth-child(7)').textContent = 'â‚¹ ' + data.amountReceived;
        document.querySelector('.fs-4:nth-child(8)').textContent = 'â‚¹ ' + data.fuelCost;
        document.querySelector('.fs-4:nth-child(9)').textContent = data.deadChicks;
        // Update charts
        updateCharts(
          data.entriesAmount,
          data.amountReceived,
          data.fuelCost,
          data.deadChicks,
          data.birdsCount
        );
      })
      .catch(() => window.location.href = '${contextPath}/dashboard?month=${month}&year=${year}');
  });
</script>
</body>
</html>