package com.poultry.controller;

import com.poultry.model.User;
import com.poultry.service.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

@Controller
@RequestMapping("/users")
public class UserController {

    @Autowired private UserService userService;

    @GetMapping
    public String list(Model model) {
        model.addAttribute("users", userService.getAllUsers());
        return "users"; // shows users.jsp
    }

    @PostMapping("/save")
    public String save(@ModelAttribute User user,
                       @RequestParam("confirmPassword") String confirmPassword) {
        // Optional: enforce password match here too
        if (user.getPassword() != null && !user.getPassword().isEmpty()
                && !user.getPassword().equals(confirmPassword)) {
            // In a real app, add BindingResult + error msg
            return "redirect:/users?error=pwd_mismatch";
        }
        userService.saveUser(user);
        return "redirect:/users";
    }

    @PostMapping("/update")
    public String update(@ModelAttribute User user,
                         @RequestParam(value = "password", required = false) String password,
                         @RequestParam(value = "confirmPassword", required = false) String confirmPassword) {
        // If password left blank in edit modal, keep existing
        if (password == null || password.isEmpty()) {
            userService.updateUserWithoutPassword(user.getId(), user);
        } else {
            if (!password.equals(confirmPassword)) {
                return "redirect:/users?error=pwd_mismatch";
            }
            user.setPassword(password);
            userService.updateUser(user.getId(), user);
        }
        return "redirect:/users";
    }

    @GetMapping("/delete/{id}")
    public String delete(@PathVariable Long id) {
        userService.deleteUser(id);
        return "redirect:/users";
    }
}
